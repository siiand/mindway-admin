import { all, takeEvery, put, fork, call } from "redux-saga/effects";
import { {{camelCase action_name}}Error, 
{{camelCase action_name}}Success,
//plopImportAction
} from "../actions/{{properCase action_prefix}}Actions.js";
import { {{
  constantCase action_name}}_INIT,
//plopImportConstant
 } from "redux/constants/{{properCase action_prefix}}Constants.js";

import FirebaseService from "services/FirebaseService";

export function* {{action_name}}() {
  yield takeEvery({{constantCase action_name}}_INIT, function* () {
    try {
      const data = yield call();
      yield put({{camelCase action_name}}Success(data));
    } catch (error) {
      yield put({{camelCase action_name}}Error(error));
    }
  });
}
//plopSaga
export default function* rootSaga() {
  yield all([
  fork({{action_name}}),
  //plopExport
  ]);
}
